---
title: "Data analysis and modeling - Beverage study"
author: "Mauricio Alessandrello"
fig-cap-location: margin
include-after-body: "footer.html"
format: 
  html:
    css: style.css
    toc: TRUE
    toc-location: left
    cap-location: bottom
title-block-banner: "#00524e"
title-block-banner-color: "white"
---

## Summary

This document is a data analysis and modeling report of the Beverage study.

## Alcohol consumption during and pre-beverage consumption

## Exploratory Data Analysis 

In this section, I load and explore the dataset. 

```{r, message=FALSE, warning=FALSE}

library(tidyverse)
library(readr)
library(rstatix)
library(ggpubr)
library(lme4)
library(knitr)
library(performance)



options(digits = 3)

data <- read_csv("Study Data.csv") %>%
  rename(id = `Participant ID`,
         day = `Study Day`,
         question = `Question Name`)

head(data)


```
***

Let's analyze the question of alcohol consumption before and while consuming the product.

```{r message=FALSE, warning=FALSE}
#Changed 1 and 0 instead of 2 and 1 for "no" and "yes" answers respectively,
# bev is the Battery, coded 1 for Beverage Daily and 0 otherwise.

daily_alc <- data %>%
  drop_na() %>%
  filter(question == "daily_alc") %>%
  mutate(
    Value = ifelse(Value == 2, 1, 0),
    bev = as_factor(ifelse(Battery == "Beverage Daily", 1, 0))
  )

daily_alc_stats <- daily_alc %>%
  group_by(Battery) %>%
  get_summary_stats(Value, show = c("n", "mean", "sd", "se", "ci"))

kable(daily_alc_stats, caption = "Metrics of 'no' answers during and pre beverage")


```
***
The proportion of "no" answers during beverage is 6% higher than the proportion of "no" answers when pre beverage. The difference is statistically signifcant because of no overlapping 95% confidence intervals.  

In the next plot, the proportion of "no" answers per individual is depicted.

```{r message=FALSE, warning=FALSE, fig.cap= "Proportion of 'no' answers per individual previous to and during the consumption of the beverage."}

daily_alc %>%
  group_by(id, Battery) %>%
  summarise(Value = mean(Value)) %>%
  ggplot(aes(Battery, Value)) +
  geom_boxplot() +
  geom_jitter(alpha = 0.2) +
  theme_minimal() +
  ylab("Proportion of 'no' answers") +
  theme(axis.title.x = element_blank())



```
***
```{r warning=FALSE, message=FALSE}
# Let's do some more calculations:

a <- daily_alc %>%
  group_by(id, Battery) %>%
  summarise(Value = mean(Value))

b <- pivot_wider(a, names_from = Battery, values_from = Value)

head(b)

# Let's see if the difference of 'no' answers for both groups is statistically significant
t.test(b$`Beverage Daily`, b$`Pre Beverage Daily`, paired = TRUE)



```
***
The difference between the proportions of 'no' answers of both groups is statistically significant.  

## Modeling

Do this increase in the proportion of no alcohol consumers has something to do with the consumption of the beverage? If so, we should see an increase in the chances of not drinking alcohol from the day on which the beverage is consumed. To do that, we will use a generalized mixed effects linear model because it is best adapted when the outcome we want to predict is binary.


```{r message=FALSE, warning=FALSE}


model1 <- lme4::glmer(factor(Value) ~ day + (1 | id),
  na.action = na.omit,
  family = binomial(link = "logit"),
  data = daily_alc
)

summary(model1)



```
***

We can see from the random effects that there is variability in the baseline and that there is a statistically significant increase of 5% per day in the chances of not consuming alcohol. However, this model considers every day as equal, but, if the beverage is truly working, the days when individuals are on beverage must have more weight. So, let's try adding an interaction term. 

```{r, message=FALSE, warning=FALSE}
model2 <- lme4::glmer(factor(Value) ~ day + day * bev + (1 | id),
  na.action = na.omit,
  family = binomial(link = "logit"),
  data = daily_alc
)

summary(model2)
```
***
This model catches an effect produced by the beverage condition that is statistically significant. The interaction term has a lower level of significance.

When we compare both models, the model 2 performs better in most metrics than model 1.

```{r message=FALSE, warning=FALSE}

compare_performance(model1, model2)

```
***
## Prediction of Probability of not consuming alcohol during the study

In this section, we will predict the probability of not consuming alcohol during the time of the study (0 to 21 days).

```{r message=FALSE, warning=FALSE, fig.cap = "Predicted probability of not consuming alcohol during the study." }

#set with the 0 to 21 days

dataset <- with(daily_alc, tibble(day = c(0:21), bev = as_factor(c(
  0, 0, 0, 0, 0, 0, 0,
  1, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1, 1, 1
))))


predicted <- predict(model2, newdata = dataset, type = "response", re.form = NA)

prediction <- tibble(Day = c(0:21), "Predicted values" = predicted)



prediction %>%
  ggplot(aes(Day, `Predicted values`)) +
  geom_point() +
  xlab("Days") +
  ylab("Predicted Probabilty of not consuming alcohol") +
  theme_minimal() +
  annotate(geom = "text", x = 15, y = 0.91, label = "Beverage consumption starts here") +
  geom_curve(aes(x = 12, y = 0.911, xend = 7, yend = 0.93),
    arrow = arrow(length = unit(0.25, "cm"), ends = "last", type = "open")
  )

```
***
These are the predictions made by the model on the days when the question was asked:

```{r, message=FALSE, warning=FALSE}
predicted <- predict(model2, newdata = tibble(day = c(1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20), bev = factor(c(0, 0, 0, 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1))), type = "response", re.form = NA)
prediction <- tibble(Day = c(1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20), "Predicted values" = predicted)

kable(prediction, align = "l", caption = "Predictions of the probability of not consuming alcohol during days on which the question was asked")
```
***
And these are the predictions on days 0, 7, 14 and 21:

```{r, message=FALSE, warning=FALSE}

predicted <- predict(model2, newdata = tibble(day = c(0, 7, 14, 21), bev = factor(c(0, 1, 1, 1))), type = "response", re.form = NA)
prediction <- tibble(Day = c(0, 7, 14, 21), "Predicted values" = predicted)

kable(prediction, align = "l", caption = "Predictions of the probability of not consuming alcohol for the days on which the question was not asked.")
```

Let's use the model to calculate the increase in the probability of not drinking alcohol from the beginning to end of the study:

```{r message=FALSE, warning=FALSE}
prediction[4,]$`Predicted values` - prediction[1,]$`Predicted values`
```


## Conclusion

* The proportion of 'no' answers during beverage was 7% higher than in the pre beverage. This difference was statistically significant with p-value = 7e-05.
* For those during beverage, there is an increase in the odds ratio in favor of not alcohol drinking of 2.4 (p-value = 0.024). This increase is independent of day.



## WHO 

## Exploratory Data Analysis

Exploratory data analysis of the dataset concerning the "WHO" questions. First, let's identify the duplicate questions:

```{r message=FALSE, warning=FALSE}
# data_dup is a dataframe containing all columns except the answers filtering by 
# "who" questions. If there are duplicate questions with different answers,
# we should see duplicated rows in this dataframe.

data_dup <- data %>% 
  filter(str_detect(question, "who")) %>% 
  select(id, day, Battery, question)


anyDuplicated(data_dup)

```

We see that there are no duplicated rows, indicating that there are no replicated questions. Let's continue exploring the dataset.

```{r, message=FALSE, warning=FALSE}

data_who <- data %>% 
  filter(str_detect(question, "who"))


head(data_who)

#Calculating the who-index for every id to obtain a single row per week.

data_who_calc <- data_who %>% 
  group_by(id, day) %>% 
  mutate(Value = sum(Value)*4) %>% 
  select(-question, -Text) 

data_who_calc <- data_who_calc[!duplicated(data_who_calc),]


# Metrics for the WHO-index by day
data_who_stats <-  data_who_calc %>% 
  group_by(day) %>% 
get_summary_stats(Value, show = c("n", "mean", "ci"))

# I create the vector differences week by week to add it to the table
differences <- c(0, 
                 data_who_stats$mean[2] - data_who_stats$mean[1],
                 data_who_stats$mean[3] - data_who_stats$mean[2],
                 data_who_stats$mean[4] - data_who_stats$mean[3])

data_who_stats$Change <- differences

kable(data_who_stats, caption = "Metrics of the WHO-index by day")

```
***
Evaluating the means and the confidence interavals, we can say that there is statistically significant difference in the WHO-index mean for some weeks. When we compare the change in the index and assuming that a 10% change is a significant one, we observe a significant increase of 10.4% from day 7 (when participants started using the product) to day 21. Let's see this graphically:

```{r, warning=FALSE, message=FALSE, fig.cap= "WHO Well being index of participants during the study."}

data_who_calc %>%
  mutate("Beverage Consumption" = ifelse(day > 7, "Yes", "No"),
         day = factor(day, levels = c(0, 7, 14, 21))) %>% 
  ggplot(aes(day, Value, fill = `Beverage Consumption`))+
  geom_boxplot()+
  geom_jitter(alpha = 0.2)+
  ylab("WHO Well Being Index (%)")+
  theme_minimal()
  


```
***

Now, let's see the change in the index by week:



```{r, message=FALSE, warning=FALSE, fig.cap= "Change in the WHO Well-Being Index during the study for each participant. The dashed line indicates the day on which the beverage started to be consumed."}
# Convert the dataframe to a wide format to obtain one row per id:

data_who_wide <- data_who_calc %>% 
  select(-Battery) %>% 
  pivot_wider(names_from = day, values_from = Value)


# I create a dataframe whith the differences in who-index per week
who_index_dif <- tibble(id = data_who_wide$id,
        "0" = 0,
       "1" = data_who_wide$`7` - data_who_wide$`0`,
       "2" = data_who_wide$`14` - data_who_wide$`7`,
       "3" = data_who_wide$`21` - data_who_wide$`14`,
       "total" = data_who_wide$`21` - data_who_wide$`0`)

# dataframe in long format with weekly differences per participant
who_index_dif_weekly <- who_index_dif %>%
  select(-total) %>% 
  pivot_longer(cols = 2:5, names_to = "week", values_to = "Value") %>% 
  mutate(week = as.numeric(week))

#dataframe with total differences day 0 to 21
who_index_dif_total <- who_index_dif %>% 
  select(id, total)



who_index_dif_weekly %>% 
  mutate(id = as_factor(id)) %>% 
  ggplot(aes(week, Value, color = id))+
  geom_line(alpha = 0.7)+
  geom_vline(xintercept = 1, linetype = 2)+
  theme_minimal()+
  theme(legend.position = "none")+
  geom_hline(yintercept = c(10, -10))+
  scale_y_continuous(breaks = c(-60, -30, -10, 0, 10, 30))+
  ylab("Change in WHO Well Being Index (%)")+
  annotate(geom = "text", x = 2.5, y = 40, label = "Zone of significant index increase")+
    annotate(geom = "text", x = 2.5, y = 0, label = "Zone of no significant index change")+
    annotate(geom = "text", x = 2.5, y = -40, label = "Zone of significant index decrease ")

```
***


## Modeling

Now, let's propose a mixed effects linear model to fit this data. In this case, the outcome is a continuos value and a linear model suits well for that purpose. Let's propose a model that incorporates beverage consumption as a variable.

```{r warning=FALSE, message=FALSE}
# add the variable bev (beverage consumption yes or no)
data_who_calc <- data_who_calc %>% 
  mutate(bev = factor(ifelse(day > 7, 1,0)))

# I use the lmerTest package because it incorporates p-values
model1 <- lmerTest::lmer(Value ~ day + day*bev + (1|id),
                     data = data_who_calc,
                     REML = TRUE)
summary(model1)
```
***
We can see that the WHO-index decreases 1.2 units per day when no consuming the beverage, but increases 1.5 units per day when consuming it. These effects are statistically significant as we can see from their p-values. Let's see what happens if we predict the index value for the days 7 (without beverage consumption) and 21 (with beverage consumption) and calculate the change to see if it is 10%.

```{r warning=FALSE, message=FALSE}
prediction <- predict(model1, newdata = tibble(day = c(7,21), bev = factor(c(0,1))), re.form = NA)

prediction[2] - prediction[1]



```
***
The value obtained is at the edge of significance. Now, let's calculate the change week by week using the model:
```{r, warning=FALSE, message=FALSE}
# Let's see if there is n change increase week by week:
prediction <- predict(model1, newdata = tibble(day = c(0,7,14,21), bev = factor(c(0, 0, 1, 1))), re.form = NA)
# Change in the first week
w1 <- prediction[2]- prediction[1]

# Change in the second week
w2 <- prediction[3] - prediction[2]

# Change in the third week
w3 <- prediction[4] - prediction[3]

# From start to end

w4 <- prediction[4] - prediction[1]

#Change week by week
kable(tibble(Week = c(1, 2, 3), Change = c(w1, w2, w3)), caption = "Changes in the WHO-index week by week calculated using the model")

#Change start to end
w4

```
***
When comparing week by week and from start to end of the study, there is no significant change in the WHO-index.

Let's compare the average index change with the change of 15 random participants:

```{r warning=FALSE, message=FALSE, fig.cap= "Comparison of the average change in the WHO Well-Being Index with 15 random participants. Black solid line represents the average change."}
#Let's fit the change data into a linear model:

fit <- lm(Value ~ week, data = who_index_dif_weekly)


# Sample random ids
newdata_i <- sample(data_who_calc$id, size = 15)

# and create a sampled data of 15 ids
set.seed(5)
sampled_data <- who_index_dif_weekly %>% 
  filter(id %in% newdata_i)


sampled_data %>% 
  mutate(id = factor(id)) %>% 
ggplot(aes(week, Value, color = id))+
  geom_line()+
  geom_abline(slope = fit$coefficients[2], intercept = fit$coefficients[1], linewidth = 1)+
  theme_minimal()+
    theme(legend.position = "none")+
  geom_hline(yintercept = c(10, -10), linetype = 2)+
  scale_y_continuous(breaks = c(-60, -30, -10, 0, 10, 30))+
  ylab("Change in WHO Well Being Index (%)")+
  annotate(geom = "text", x = 2.5, y = 40, label = "Zone of significant index increase")+
    annotate(geom = "text", x = 2.5, y = -5, label = "Zone of no significant index change")+
    annotate(geom = "text", x = 2.5, y = -40, label = "Zone of significant index decrease ")
  

```



## Conclusion

* Although the model presented a significant positive effect of the beverage on the WHO-Index, it was not enough to increase the score in more than 10% in the time of the study.

## Alcohol use

Let's examine the dataset regarding the alcohol use question:

```{r message=FALSE, warning=FALSE}
alc_use <- data %>% 
  filter(question == "week_alc_use") %>% 
  drop_na()
head(alc_use)
```
Now, let's divide the datasets in two groups, one is asked about product use as a substitute of alcohol on day 14 and the other is asked on day 21. The same participants compose the two groups, so a paired t-test is appropiate. But let's examine the data first.

```{r message=FALSE, warning=FALSE, fig.cap= "Number of times that alcohol was substituted by the product. Question asked on day 14 and 21."}
alc_use %>% 
  mutate(day = as_factor(ifelse(day == 14, "Day 14", "Day 21"))) %>% 
  ggplot(aes(day, Value))+
  geom_boxplot()+
  theme_minimal()+
  geom_jitter(alpha = 0.2)+
  ylab("Number of substitutions")+
  xlab("")
```
***

There is an increase in the median at day 21.

```{r message=FALSE, warning=FALSE}
# Let' generate the two groups
alc_use_14 <- alc_use %>% 
  select(day, Value) %>% 
  filter(day == 14) %>% 
  pull(Value)

alc_use_21 <- alc_use %>% 
  select(day, Value) %>% 
  filter(day == 21) %>% 
  pull(Value)

length(alc_use_14)
length(alc_use_21)

# There are more answers on day 14, so let's take a random sample of size 111 from that vector to match lenghts.
set.seed(5)
alc_use_14 <- sample(alc_use_14, size = 111)

t.test(alc_use_21, alc_use_14, paired = TRUE)
```

## Conclusion

* There is a statistically significant change in the number of times that alcohol is substitued by the infused beverage on day 21 compared to day 14. On day 21, alcohol was substituted 0.53 more times than on day 14.