---
title: "Data analysis and modeling - Beverage study"
author: "Mauricio Alessandrello"
fig-cap-location: margin
format: 
  html:
    toc: TRUE
    toc-location: left
    cap-location: bottom
title-block-banner: "#00524e"
title-block-banner-color: "white"
---

## Summary

This document is a data analysis and modeling report of the Beverage study.


## Exploratory Data Analysis 

In this section, I load and explore the dataset. 

```{r, message=FALSE, warning=FALSE}

library(tidyverse)
library(readr)
library(rstatix)
library(ggpubr)
library(lme4)
library(lmerTest)
library(knitr)
library(performance)

options(digits = 2)

data <- read_csv("Study Data.csv") %>% 
  rename(id = `Participant ID`, day = `Study Day`)

head(data)


```
***

## Alcohol consumption during and pre-beverage consumption

Let's analyze the question of alcohol consumption before and while consuming the product.

```{r message=FALSE, warning=FALSE}
# 1 and 0 instead of 2 and 1 for "no" and "yes" answers respectively
daily_alc <- data %>% 
  drop_na() %>% 
  filter(`Question Name` == "daily_alc") %>% 
  mutate(Value = ifelse(Value == 2, 1, 0),
         bev = as_factor(ifelse(Battery == "Beverage Daily", 1, 0)))

daily_alc_stats <- daily_alc %>% 
  group_by(Battery) %>% 
  get_summary_stats(Value, show = c("n", "mean", "sd", "se", "ci"))

kable(daily_alc_stats)


```
***
The proportion of individuals that don't consume alcohol during beverage is 6% higher than the proportion of individuals that don't consume alcohol pre beverage. 

```{r message=FALSE, warning=FALSE, fig.cap= "Probability of not consuming alcohol previous to and during the consumption of the beverage. p-values were obtained with a t-test."}

daily_alc %>% 
  group_by(id, Battery) %>% 
  summarise(Value = mean(Value)) %>% 
  ggplot(aes(Battery, Value))+
  geom_boxplot()+
  geom_pwc(method = "t_test")+
  theme_minimal()+
  ylab("Probability of NOT consuming alcohol")+
  theme(axis.title.x = element_blank())

```
***

## Modeling

Do this increase in the proportion of no alcohol consumers has something to do with the consumption of the beverage? If so, we should see an increase in the chances of not drinking alcohol from the day on which the beverage is consumed. To do that, we will use a generalized mixed effects linear model because it is best adapted when the outcome we want to predict is binary.


```{r message=FALSE, warning=FALSE}


model1 <- lme4::glmer(factor(Value) ~ day + (1|id),
                     na.action = na.omit,
                     family = binomial(link = "logit"),
                     data = daily_alc)

summary(model1)



```
***

We can see from the random effects that there is variability in the baseline and that there is a statistically significant increase of 5% per day in the chances of not consuming alcohol. However, this model considers every day as equal, but the days when individuals are on beverage may have more weight, if the beverage is truly working. So, let's add an interaction model. 

```{r, message=FALSE, warning=FALSE}
model2 <- lme4::glmer(factor(Value) ~ day + day*bev + (1|id),
                     na.action = na.omit,
                     family = binomial(link = "logit"),
                     data = daily_alc)

summary(model2)
```
***
This model catches a effect produced by the beverage condition that is statistically significant. The interaction term has a lower level of significance

When we compare both models, the model 2 perfomrs slightly better in the AIC metric and R2 than model 1.

```{r message=FALSE, warning=FALSE}

compare_performance(model1, model2)

```

## Prediction

```{r message=FALSE, warning=FALSE}

#set with 0 to 21 days

test_set <- with(daily_alc, tibble(day = c(0:21), bev = as_factor(c(0,0,0,0,0,0,0,
                                                                                1,1,1,1,1,1,
                                                                                1,1,1,1,1,1,1,
                                                                    1,1))))


predicted <- predict(model2, newdata = test_set, type = "response", re.form = NA)



```



